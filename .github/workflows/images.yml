name: Building Image

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  call-workflow-check:
    uses: ./.github/workflows/check.yml

  build-image:
    concurrency: build-iamge-ci-${{ github.ref }}
    needs: call-workflow-check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup Rust enviroment
      uses: actions-rs/toolchain@v1
      with: 
        toolchain: stable
        target: wasm32-unknown-unknown
        override: true
        profile: minimal

    - name: Install Wasm-pack
      # install wasm-pack from downloading is more faster then cargo install
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

    - name: Using cache to speed up
      uses: actions/cache@v3.0.11
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Building WASM
      run: |
        wasm-pack build --release --no-typescript --target web --out-dir ../static/pkg wasm

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login Github Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Metadata for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/tommady/homepage
        tags: |
          type=raw,value={{tag}}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
