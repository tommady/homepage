{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8","program":"/home/tommady/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_task","--edition=2018","/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"std\"","-C","metadata=42c6cf92036b5b1e","-C","extra-filename=-42c6cf92036b5b1e","--out-dir","/home/tommady/code/homepage/server/target/rls/debug/deps","-L","dependency=/home/tommady/code/homepage/server/target/rls/debug/deps","--extern","once_cell=/home/tommady/code/homepage/server/target/rls/debug/deps/libonce_cell-e4c6105e296bb4dc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tommady/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tommady/code/homepage/server/target/rls/debug/deps/libfutures_task-42c6cf92036b5b1e.rmeta"},"prelude":{"crate_id":{"name":"futures_task","disambiguator":[14007386329130740301,17768313822039715519]},"crate_root":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src","external_crates":[{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","num":18,"id":{"name":"once_cell","disambiguator":[12928659116746412125,10614340796330292230]}}],"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":0,"byte_end":2042,"line_start":1,"line_end":62,"column_start":1,"column_end":70}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1341,"byte_end":1346,"line_start":35,"line_end":35,"column_start":24,"column_end":29},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1348,"byte_end":1358,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":13},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1360,"byte_end":1370,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1506,"byte_end":1513,"line_start":41,"line_end":41,"column_start":30,"column_end":37},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":274},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1617,"byte_end":1622,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":305},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1735,"byte_end":1744,"line_start":51,"line_end":51,"column_start":32,"column_end":41},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1746,"byte_end":1754,"line_start":51,"line_end":51,"column_start":43,"column_end":51},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1804,"byte_end":1813,"line_start":55,"line_end":55,"column_start":29,"column_end":38},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1815,"byte_end":1829,"line_start":55,"line_end":55,"column_start":40,"column_end":54},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1831,"byte_end":1846,"line_start":55,"line_end":55,"column_start":56,"column_end":71},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1893,"byte_end":1903,"line_start":58,"line_end":58,"column_start":28,"column_end":38},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1956,"byte_end":1970,"line_start":60,"line_end":60,"column_start":28,"column_end":42},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":8659},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":1994,"byte_end":2001,"line_start":62,"line_end":62,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":32838},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":2003,"byte_end":2007,"line_start":62,"line_end":62,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":8669},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":2009,"byte_end":2014,"line_start":62,"line_end":62,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":32878},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":2016,"byte_end":2024,"line_start":62,"line_end":62,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":32887},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":2026,"byte_end":2040,"line_start":62,"line_end":62,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":0,"byte_end":2042,"line_start":1,"line_end":62,"column_start":1,"column_end":70},"name":"","qualname":"::","value":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":258},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":67},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" Tools for working with tasks.\n","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":160,"byte_end":248,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":416,"byte_end":437,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/lib.rs","byte_start":642,"byte_end":719,"line_start":15,"line_end":15,"column_start":1,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2214,"byte_end":2219,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Spawn","qualname":"::spawn::Spawn","value":"Spawn","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":" The `Spawn` trait allows for pushing futures onto an executor that will\n run them to completion.\n","sig":null,"attributes":[{"value":"/ The `Spawn` trait allows for pushing futures onto an executor that will","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2100,"byte_end":2175,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ run them to completion.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2176,"byte_end":2203,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2539,"byte_end":2548,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"::spawn::Spawn::spawn_obj","value":"pub fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2226,"byte_end":2277,"line_start":7,"line_end":7,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2282,"byte_end":2285,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2290,"byte_end":2302,"line_start":9,"line_end":9,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2307,"byte_end":2310,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2315,"byte_end":2381,"line_start":11,"line_end":11,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2386,"byte_end":2447,"line_start":12,"line_end":12,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2452,"byte_end":2516,"line_start":13,"line_end":13,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2521,"byte_end":2531,"line_start":14,"line_end":14,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2958,"byte_end":2964,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"status","qualname":"::spawn::Spawn::status","value":"pub fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2620,"byte_end":2683,"line_start":17,"line_end":17,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2688,"byte_end":2691,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2696,"byte_end":2758,"line_start":19,"line_end":19,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2763,"byte_end":2825,"line_start":20,"line_end":20,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2830,"byte_end":2893,"line_start":21,"line_end":21,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2898,"byte_end":2936,"line_start":22,"line_end":22,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":2941,"byte_end":2950,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3141,"byte_end":3151,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"LocalSpawn","qualname":"::spawn::LocalSpawn","value":"LocalSpawn","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures\n that don't implement `Send`.\n","sig":null,"attributes":[{"value":"/ The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3024,"byte_end":3097,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ that don't implement `Send`.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3098,"byte_end":3130,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3471,"byte_end":3486,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"::spawn::LocalSpawn::spawn_local_obj","value":"pub fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3158,"byte_end":3209,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3214,"byte_end":3217,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3222,"byte_end":3234,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3239,"byte_end":3242,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3247,"byte_end":3313,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3318,"byte_end":3379,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3384,"byte_end":3448,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3453,"byte_end":3463,"line_start":39,"line_end":39,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3901,"byte_end":3913,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"status_local","qualname":"::spawn::LocalSpawn::status_local","value":"pub fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3563,"byte_end":3626,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3631,"byte_end":3634,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3639,"byte_end":3701,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3706,"byte_end":3768,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3773,"byte_end":3836,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3841,"byte_end":3879,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3884,"byte_end":3893,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4028,"byte_end":4038,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"SpawnError","qualname":"::spawn::SpawnError","value":"SpawnError {  }","parent":null,"children":[{"krate":0,"index":17}],"decl_id":null,"docs":" An error that occurred during spawning.\n","sig":null,"attributes":[{"value":"/ An error that occurred during spawning.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":3973,"byte_end":4016,"line_start":54,"line_end":54,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4537,"byte_end":4545,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<SpawnError>::shutdown","value":"pub fn shutdown() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spawning failed because the executor has been shut down.\n","sig":null,"attributes":[{"value":"/ Spawning failed because the executor has been shut down.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4465,"byte_end":4525,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4674,"byte_end":4685,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<SpawnError>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether spawning failed to the executor being shut down.\n","sig":null,"attributes":[{"value":"/ Check whether spawning failed to the executor being shut down.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4596,"byte_end":4662,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":260},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810823,"byte_end":7810830,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"name":"ArcWake","qualname":"::arc_wake::ArcWake","value":"ArcWake: Send + Sync","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" A way of waking up a specific task.","sig":null,"attributes":[{"value":"/ A way of waking up a specific task.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810050,"byte_end":7810089,"line_start":3,"line_end":3,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810090,"byte_end":7810093,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing this trait, types that are expected to be wrapped in an `Arc`","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810094,"byte_end":7810175,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ can be converted into [`Waker`] objects.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810176,"byte_end":7810220,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/ Those Wakers can be used to signal executors that a task it owns","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810221,"byte_end":7810289,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ is ready to be `poll`ed again.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810290,"byte_end":7810324,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810325,"byte_end":7810328,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two ways to convert `ArcWake` into [`Waker`]:","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810329,"byte_end":7810399,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810400,"byte_end":7810403,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * [`waker`](super::waker()) converts `Arc<impl ArcWake>` into [`Waker`].","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810404,"byte_end":7810480,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ * [`waker_ref`](super::waker_ref()) converts `&Arc<impl ArcWake>` into [`WakerRef`] that","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810481,"byte_end":7810573,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/   provides access to a [`&Waker`][`Waker`].","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810574,"byte_end":7810621,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810622,"byte_end":7810625,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810626,"byte_end":7810657,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ [`WakerRef`]: super::WakerRef","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810658,"byte_end":7810691,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811282,"byte_end":7811286,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"wake","qualname":"::arc_wake::ArcWake::wake","value":"pub fn wake(Arc<Self>)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810850,"byte_end":7810925,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810930,"byte_end":7810946,"line_start":22,"line_end":22,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810951,"byte_end":7810954,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810959,"byte_end":7811040,"line_start":24,"line_end":24,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811045,"byte_end":7811094,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811099,"byte_end":7811102,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake` should place","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811107,"byte_end":7811185,"line_start":27,"line_end":27,"column_start":5,"column_end":83}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811190,"byte_end":7811230,"line_start":28,"line_end":28,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811235,"byte_end":7811238,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811243,"byte_end":7811274,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811914,"byte_end":7811925,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"wake_by_ref","qualname":"::arc_wake::ArcWake::wake_by_ref","value":"pub fn wake_by_ref(&Arc<Self>)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811350,"byte_end":7811425,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811430,"byte_end":7811446,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811451,"byte_end":7811454,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811459,"byte_end":7811540,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811545,"byte_end":7811594,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811599,"byte_end":7811602,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake_by_ref` should place","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811607,"byte_end":7811692,"line_start":41,"line_end":41,"column_start":5,"column_end":90}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811697,"byte_end":7811737,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811742,"byte_end":7811745,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`wake`](ArcWake::wake), but must not consume the provided data","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811750,"byte_end":7811845,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ pointer.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811850,"byte_end":7811862,"line_start":45,"line_end":45,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811867,"byte_end":7811870,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7811875,"byte_end":7811906,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":274},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker.rs","byte_start":7812442,"byte_end":7812447,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"waker","qualname":"::waker::waker","value":"pub fn waker<W>(Arc<W>) -> Waker where W: ArcWake + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Waker`] from an `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a [`Waker`] from an `Arc<impl ArcWake>`.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker.rs","byte_start":7812292,"byte_end":7812344,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker.rs","byte_start":7812345,"byte_end":7812348,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The returned [`Waker`] will call","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker.rs","byte_start":7812349,"byte_end":7812385,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker.rs","byte_start":7812386,"byte_end":7812434,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":310},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814273,"byte_end":7814281,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"WakerRef","qualname":"::waker_ref::WakerRef","value":"WakerRef {  }","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"decl_id":null,"docs":" A [`Waker`] that is only valid for a given lifetime.","sig":null,"attributes":[{"value":"/ A [`Waker`] that is only valid for a given lifetime.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814068,"byte_end":7814124,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814125,"byte_end":7814128,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Note: this type implements [`Deref<Target = Waker>`](std::ops::Deref),","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814129,"byte_end":7814203,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ so it can be used to get a `&Waker`.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814204,"byte_end":7814244,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814454,"byte_end":7814457,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<WakerRef>::new","value":"pub fn new(&'a Waker) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] reference.\n","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] reference.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814385,"byte_end":7814442,"line_start":20,"line_end":20,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815105,"byte_end":7815116,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"new_unowned","qualname":"<WakerRef>::new_unowned","value":"pub fn new_unowned(ManuallyDrop<Waker>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814765,"byte_end":7814837,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814842,"byte_end":7814845,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note: this if for rare cases where the caller created a [`Waker`] in","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814850,"byte_end":7814922,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ an unsafe way (that will be valid only for a lifetime to be determined","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814927,"byte_end":7815001,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ by the caller), and the [`Waker`] doesn't need to or must not be","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815006,"byte_end":7815074,"line_start":35,"line_end":35,"column_start":5,"column_end":73}},{"value":"/ destroyed.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815079,"byte_end":7815093,"line_start":36,"line_end":36,"column_start":5,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":305},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815547,"byte_end":7815556,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"waker_ref","qualname":"::waker_ref::waker_ref","value":"pub fn waker_ref<W>(&Arc<W>) -> WakerRef where W: ArcWake","parent":null,"children":[],"decl_id":null,"docs":" Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815359,"byte_end":7815438,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815439,"byte_end":7815442,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The resulting [`Waker`] will call","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815443,"byte_end":7815480,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815481,"byte_end":7815529,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815530,"byte_end":7815539,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":8296,"byte_end":8310,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"LocalFutureObj","qualname":"::future_obj::LocalFutureObj","value":"LocalFutureObj {  }","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":8007,"byte_end":8069,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + 'a>`.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":8070,"byte_end":8109,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":8110,"byte_end":8113,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":8114,"byte_end":8192,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":8193,"byte_end":8270,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":8271,"byte_end":8284,"line_start":15,"line_end":15,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9313,"byte_end":9316,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalFutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + 'a>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocalFutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `LocalFutureObj` from a custom trait object representation.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9215,"byte_end":9287,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9292,"byte_end":9301,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9865,"byte_end":9880,"line_start":61,"line_end":61,"column_start":19,"column_end":34},"name":"into_future_obj","qualname":"<LocalFutureObj>::into_future_obj","value":"pub unsafe fn into_future_obj(Self) -> FutureObj","parent":null,"children":[],"decl_id":null,"docs":" Converts the `LocalFutureObj` into a `FutureObj`.","sig":null,"attributes":[{"value":"/ Converts the `LocalFutureObj` into a `FutureObj`.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9567,"byte_end":9620,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9625,"byte_end":9628,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9633,"byte_end":9645,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9650,"byte_end":9653,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ To make this operation safe one has to ensure that the `UnsafeFutureObj`","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9658,"byte_end":9734,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ instance from which this `LocalFutureObj` was created actually","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9739,"byte_end":9805,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ implements `Send`.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9810,"byte_end":9832,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9837,"byte_end":9846,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11095,"byte_end":11104,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"FutureObj","qualname":"::future_obj::FutureObj","value":"","parent":null,"children":[],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + Send + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10654,"byte_end":10716,"line_start":99,"line_end":99,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + Send + 'a>`.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10717,"byte_end":10763,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10764,"byte_end":10767,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10768,"byte_end":10846,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10847,"byte_end":10924,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10925,"byte_end":10938,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10939,"byte_end":10942,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ You should generally not need to use this type outside of `no_std` or when","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10943,"byte_end":11021,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ implementing `Spawn`, consider using `BoxFuture` instead.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11022,"byte_end":11083,"line_start":107,"line_end":107,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11348,"byte_end":11351,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + Send>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `FutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `FutureObj` from a custom trait object representation.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11255,"byte_end":11322,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11327,"byte_end":11336,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12214,"byte_end":12229,"line_start":147,"line_end":147,"column_start":18,"column_end":33},"name":"UnsafeFutureObj","qualname":"::future_obj::UnsafeFutureObj","value":"UnsafeFutureObj<'a, T>: 'a","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"decl_id":null,"docs":" A custom implementation of a future trait object for `FutureObj`, providing\n a vtable with drop support.","sig":null,"attributes":[{"value":"/ A custom implementation of a future trait object for `FutureObj`, providing","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11817,"byte_end":11896,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ a vtable with drop support.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11897,"byte_end":11928,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11929,"byte_end":11932,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This custom representation is typically used only in `no_std` contexts,","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11933,"byte_end":12008,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"/ where the default `Box`-based implementation is not available.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12009,"byte_end":12075,"line_start":141,"line_end":141,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12076,"byte_end":12079,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12080,"byte_end":12092,"line_start":143,"line_end":143,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12093,"byte_end":12096,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ See the safety notes on individual methods for what guarantees an","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12097,"byte_end":12166,"line_start":145,"line_end":145,"column_start":1,"column_end":70}},{"value":"/ implementor must provide.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12167,"byte_end":12196,"line_start":146,"line_end":146,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12674,"byte_end":12682,"line_start":158,"line_end":158,"column_start":8,"column_end":16},"name":"into_raw","qualname":"::future_obj::UnsafeFutureObj::into_raw","value":"pub fn into_raw(Self) -> *mut Future<Output = T> + 'a","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Convert an owned instance into a (conceptually owned) fat pointer.","sig":null,"attributes":[{"value":"/ Convert an owned instance into a (conceptually owned) fat pointer.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12247,"byte_end":12317,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12322,"byte_end":12325,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12330,"byte_end":12342,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12347,"byte_end":12350,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12355,"byte_end":12373,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12378,"byte_end":12381,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to convert the","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12386,"byte_end":12457,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ provided `*mut (dyn Future<Output = T> + 'a)` into a `Pin<&mut (dyn","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12462,"byte_end":12533,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ Future<Output = T> + 'a)>` and call methods on it, non-reentrantly,","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12538,"byte_end":12609,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/ until `UnsafeFutureObj::drop` is called with it.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12614,"byte_end":12666,"line_start":157,"line_end":157,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":13360,"byte_end":13364,"line_start":178,"line_end":178,"column_start":15,"column_end":19},"name":"drop","qualname":"::future_obj::UnsafeFutureObj::drop","value":"pub unsafe fn drop(*mut Future<Output = T> + 'a)","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Drops the future represented by the given fat pointer.","sig":null,"attributes":[{"value":"/ Drops the future represented by the given fat pointer.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12733,"byte_end":12791,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12796,"byte_end":12799,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12804,"byte_end":12816,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12821,"byte_end":12824,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12829,"byte_end":12847,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12852,"byte_end":12855,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to call this","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12860,"byte_end":12929,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ function once per `into_raw` invocation.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12934,"byte_end":12978,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12983,"byte_end":12986,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ## Caller","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":12991,"byte_end":13004,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":13009,"byte_end":13012,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure:","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":13017,"byte_end":13044,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":13049,"byte_end":13052,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/  * the pointer passed was obtained from an `into_raw` invocation from","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":13057,"byte_end":13130,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/    this same trait object","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":13135,"byte_end":13164,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/  * the pointer is not currently in use as a `Pin<&mut (dyn Future<Output","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":13169,"byte_end":13245,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/    = T> + 'a)>`","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":13250,"byte_end":13269,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/  * the pointer must not be used again after this function is called","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":13274,"byte_end":13345,"line_start":177,"line_end":177,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19220,"byte_end":19230,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"noop_waker","qualname":"::noop_waker::noop_waker","value":"pub fn noop_waker() -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Waker`] which does\n nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Create a new [`Waker`] which does","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19000,"byte_end":19037,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ nothing when `wake()` is called on it.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19038,"byte_end":19080,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19081,"byte_end":19084,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19085,"byte_end":19099,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19100,"byte_end":19103,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19104,"byte_end":19111,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker;","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19112,"byte_end":19146,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let waker = noop_waker();","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19147,"byte_end":19176,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ waker.wake();","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19177,"byte_end":19194,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19195,"byte_end":19202,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19203,"byte_end":19212,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":238},"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19582,"byte_end":19596,"line_start":49,"line_end":49,"column_start":8,"column_end":22},"name":"noop_waker_ref","qualname":"::noop_waker::noop_waker_ref","value":"pub fn noop_waker_ref() -> &'static Waker","parent":null,"children":[],"decl_id":null,"docs":" Get a static reference to a [`Waker`] which\n does nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Get a static reference to a [`Waker`] which","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19308,"byte_end":19355,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/ does nothing when `wake()` is called on it.","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19356,"byte_end":19403,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19404,"byte_end":19407,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19408,"byte_end":19422,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19423,"byte_end":19426,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19427,"byte_end":19434,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker_ref;","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19435,"byte_end":19473,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ let waker = noop_waker_ref();","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19474,"byte_end":19507,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ waker.wake_by_ref();","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19508,"byte_end":19532,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19533,"byte_end":19540,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19541,"byte_end":19550,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/noop_waker.rs","byte_start":19551,"byte_end":19574,"line_start":48,"line_end":48,"column_start":1,"column_end":24}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4079,"byte_end":4089,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4250,"byte_end":4260,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4428,"byte_end":4438,"line_start":72,"line_end":72,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4448,"byte_end":4458,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":5953,"byte_end":5956,"line_start":131,"line_end":131,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":6250,"byte_end":6253,"line_start":141,"line_end":141,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":6566,"byte_end":6568,"line_start":151,"line_end":151,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":6862,"byte_end":6864,"line_start":161,"line_end":161,"column_start":50,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":7245,"byte_end":7248,"line_start":174,"line_end":174,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":7574,"byte_end":7577,"line_start":184,"line_end":184,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814366,"byte_end":7814374,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815257,"byte_end":7815265,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":8713,"byte_end":8727,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9187,"byte_end":9201,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9965,"byte_end":9979,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10163,"byte_end":10177,"line_start":73,"line_end":73,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10284,"byte_end":10298,"line_start":80,"line_end":80,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10529,"byte_end":10543,"line_start":91,"line_end":91,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11155,"byte_end":11164,"line_start":110,"line_end":110,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11199,"byte_end":11208,"line_start":111,"line_end":111,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11232,"byte_end":11241,"line_start":113,"line_end":113,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11471,"byte_end":11480,"line_start":121,"line_end":121,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11639,"byte_end":11648,"line_start":128,"line_end":128,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":14019,"byte_end":14022,"line_start":201,"line_end":201,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":14330,"byte_end":14333,"line_start":212,"line_end":212,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":14726,"byte_end":14729,"line_start":226,"line_end":226,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":15073,"byte_end":15076,"line_start":238,"line_end":238,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":15391,"byte_end":15394,"line_start":248,"line_end":248,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":15715,"byte_end":15718,"line_start":258,"line_end":258,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":16169,"byte_end":16172,"line_start":273,"line_end":273,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":16600,"byte_end":16603,"line_start":285,"line_end":285,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17050,"byte_end":17059,"line_start":297,"line_end":297,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17221,"byte_end":17230,"line_start":303,"line_end":303,"column_start":65,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17433,"byte_end":17442,"line_start":309,"line_end":309,"column_start":72,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17614,"byte_end":17623,"line_start":315,"line_end":315,"column_start":70,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17819,"byte_end":17833,"line_start":321,"line_end":321,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17988,"byte_end":18002,"line_start":327,"line_end":327,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":18191,"byte_end":18205,"line_start":333,"line_end":333,"column_start":65,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":18370,"byte_end":18384,"line_start":339,"line_end":339,"column_start":63,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4079,"byte_end":4089,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4250,"byte_end":4260,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4428,"byte_end":4438,"line_start":72,"line_end":72,"column_start":28,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":16},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":4448,"byte_end":4458,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":5953,"byte_end":5956,"line_start":131,"line_end":131,"column_start":40,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":10}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":6250,"byte_end":6253,"line_start":141,"line_end":141,"column_start":50,"column_end":53},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":6566,"byte_end":6568,"line_start":151,"line_end":151,"column_start":40,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":3157},"to":{"krate":0,"index":10}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":6862,"byte_end":6864,"line_start":161,"line_end":161,"column_start":50,"column_end":52},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":3157},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":7245,"byte_end":7248,"line_start":174,"line_end":174,"column_start":44,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":4030},"to":{"krate":0,"index":10}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/spawn.rs","byte_start":7574,"byte_end":7577,"line_start":184,"line_end":184,"column_start":54,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":4030},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810832,"byte_end":7810836,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":260}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/arc_wake.rs","byte_start":7810839,"byte_end":7810843,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":260}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7814366,"byte_end":7814374,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/waker_ref.rs","byte_start":7815257,"byte_end":7815265,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":8713,"byte_end":8727,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9187,"byte_end":9201,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":9965,"byte_end":9979,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10163,"byte_end":10177,"line_start":73,"line_end":73,"column_start":40,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10284,"byte_end":10298,"line_start":80,"line_end":80,"column_start":20,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":10529,"byte_end":10543,"line_start":91,"line_end":91,"column_start":18,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11155,"byte_end":11164,"line_start":110,"line_end":110,"column_start":19,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11199,"byte_end":11208,"line_start":111,"line_end":111,"column_start":25,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11232,"byte_end":11241,"line_start":113,"line_end":113,"column_start":13,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11471,"byte_end":11480,"line_start":121,"line_end":121,"column_start":24,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":11639,"byte_end":11648,"line_start":128,"line_end":128,"column_start":20,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":14019,"byte_end":14022,"line_start":201,"line_end":201,"column_start":50,"column_end":53},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":30390},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":14330,"byte_end":14333,"line_start":212,"line_end":212,"column_start":47,"column_end":50},"kind":{"Impl":{"id":24}},"from":{"krate":2,"index":30390},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":14726,"byte_end":14729,"line_start":226,"line_end":226,"column_start":54,"column_end":57},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":15073,"byte_end":15076,"line_start":238,"line_end":238,"column_start":55,"column_end":58},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":15391,"byte_end":15394,"line_start":248,"line_end":248,"column_start":55,"column_end":58},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":15715,"byte_end":15718,"line_start":258,"line_end":258,"column_start":54,"column_end":57},"kind":{"Impl":{"id":28}},"from":{"krate":2,"index":30390},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":16169,"byte_end":16172,"line_start":273,"line_end":273,"column_start":55,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":2,"index":30390},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":16600,"byte_end":16603,"line_start":285,"line_end":285,"column_start":55,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":30390},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17050,"byte_end":17059,"line_start":297,"line_end":297,"column_start":67,"column_end":76},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17221,"byte_end":17230,"line_start":303,"line_end":303,"column_start":65,"column_end":74},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17433,"byte_end":17442,"line_start":309,"line_end":309,"column_start":72,"column_end":81},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17614,"byte_end":17623,"line_start":315,"line_end":315,"column_start":70,"column_end":79},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17819,"byte_end":17833,"line_start":321,"line_end":321,"column_start":60,"column_end":74},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":17988,"byte_end":18002,"line_start":327,"line_end":327,"column_start":58,"column_end":72},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":18191,"byte_end":18205,"line_start":333,"line_end":333,"column_start":65,"column_end":79},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/tommady/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.8/src/future_obj.rs","byte_start":18370,"byte_end":18384,"line_start":339,"line_end":339,"column_start":63,"column_end":77},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1889}}]}